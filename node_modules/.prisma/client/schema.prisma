// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- Existing models you already use -----------------
model Watchlist {
  id        String   @id @default(cuid())
  region    String   @unique
  keywords  String[] // Postgres text[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Theme {
  id              String   @id @default(cuid())
  region          String
  theme           String
  heat            Float
  momentum        Int
  forecast_heat   Float?
  confidence      Float?
  act_watch_avoid String?
  links           String[] @default([]) // URLs supporting this theme
  createdAt       DateTime @default(now())

  @@index([region, createdAt])
  @@index([region, theme])
}

// --- NEW: Providers (quality gates & weights) --------
model Provider {
  id                     String   @id @default(cuid())
  key                    String   @unique
  label                  String
  minViews               Int      @default(0)
  minEngRate             Float    @default(0)
  minAccountFoll         Int      @default(0)
  baseWeight             Float    @default(1.0)
  freshnessHalfLifeHours Int      @default(168)
  credibility            Float    @default(0.8)
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}

// --- NEW: Normalized document we can cite ------------
model SourceDoc {
  id          String    @id @default(cuid())
  provider    String
  url         String    @unique
  title       String?
  author      String?
  authorFoll  Int?
  views       Int?
  likes       Int?
  comments    Int?
  publishedAt DateTime?
  lang        String?
  country     String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  signals Signal[]
}

// --- NEW: A single “mention/signal” of a keyword -----
model Signal {
  id         String     @id @default(cuid())
  region     String
  entity     String
  entityType String
  provider   String
  sourceId   String?
  source     SourceDoc? @relation(fields: [sourceId], references: [id])

  views     Int?
  likes     Int?
  comments  Int?
  shares    Int?
  searchVol Int?
  newsRank  Float?

  engagement Float?
  velocity   Float?
  authority  Float?
  score      Float?

  observedAt DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([region, entity, provider, observedAt])
}
